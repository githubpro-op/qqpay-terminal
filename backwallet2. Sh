cd /var/www/qqpay

cat <<'EOF' | sudo tee resources/views/sections/wallet-modal.blade.php
<!-- ‚ö° QQWALLET MODAL ‚Äî FUTURISTIC FIXED VERSION -->
<div id="wallet-modal" class="modal">
  <div class="modal-content wallet-neon">
    <button onclick="closeModal('wallet-modal')" class="btn-x">‚úñ</button>

    <div class="wm-header">
      <div class="wm-title">QQWALLET</div>
      <div class="wm-sub">INSTANT ‚Ä¢ SECURE ‚Ä¢ SMART FINANCE</div>
    </div>

    <!-- Balances -->
    <div class="wallet-balance-box">
      <table class="wallet-bal-table">
        <tr>
          <th>USDT (‚ÇÆ)</th>
          <th>‚Çπ INR</th>
          <th>QQCOINS</th>
        </tr>
        <tr>
          <td id="wBalUSDT">0.0000 ‚ÇÆ</td>
          <td id="wBalRS">‚Çπ5000.00</td>
          <td id="wBalQQ">0.0000 QQ</td>
        </tr>
      </table>
    </div>

    <!-- Action Buttons -->
    <div class="wallet-actions">
      <div class="wallet-act-card" onclick="qqOpenForm('depositForm')">üí∞ Deposit</div>
      <div class="wallet-act-card" onclick="qqOpenForm('withdrawForm')">üèß Withdraw</div>
      <div class="wallet-act-card" onclick="qqOpenForm('exchangeForm')">‚ôªÔ∏è Exchange</div>
      <div class="wallet-act-card" onclick="qqOpenForm('transferForm')">üîÅ Transfer</div>
    </div>

    <!-- Forms -->
    <div id="walletForms">

      <!-- DEPOSIT -->
      <div id="depositForm" class="form-box hidden">
        <h3>Deposit Funds</h3>
        <label>Enter Amount (‚Çπ)</label>
        <input type="number" id="depositAmt" placeholder="Enter deposit amount" min="1">
        <div class="method-tiles">
          <button onclick="qqDepositMethod('upi')">UPI</button>
          <button onclick="qqDepositMethod('bank')">Bank</button>
          <button onclick="qqDepositMethod('usdt')">USDT (‚ÇÆ)</button>
        </div>
        <div id="depositDetails" class="deposit-details"></div>
        <label>Upload Payment Receipt</label>
        <input type="file" id="depositReceipt" accept="image/*">
        <div style="margin-top:10px;">
          <button id="btnDeposit" onclick="submitWalletDeposit()" class="primary">Submit Deposit</button>
        </div>
      </div>

      <!-- WITHDRAW -->
      <div id="withdrawForm" class="form-box hidden">
        <h3>Withdraw Funds</h3>
        <label>Enter Amount (‚Çπ)</label>
        <input type="number" id="withdrawAmt" placeholder="Enter withdraw amount" min="1">
        <div class="method-tiles">
          <button onclick="qqWithdrawMethod('upi')">UPI</button>
          <button onclick="qqWithdrawMethod('bank')">Bank</button>
          <button onclick="qqWithdrawMethod('usdt')">USDT</button>
        </div>
        <div id="withdrawDetails" class="withdraw-details"></div>
        <div style="margin-top:10px;">
          <button id="btnWithdraw" onclick="submitWalletWithdraw()" class="primary warn">Submit Withdraw</button>
        </div>
      </div>

      <!-- EXCHANGE -->
      <div id="exchangeForm" class="form-box hidden">
        <h3>Exchange Currency</h3>
        <div class="exchange-rates">
          <div>1 USDT = 97 ‚Çπ</div>
          <div>1 QQCoin = 0.96 ‚Çπ (0.096 ‚ÇÆ)</div>
        </div>
        <label>From</label>
        <select id="exchangeFrom">
          <option value="USDT">USDT</option>
          <option value="RS">‚Çπ INR</option>
          <option value="QQ">QQCoins</option>
        </select>
        <label>To</label>
        <select id="exchangeTo">
          <option value="RS">‚Çπ INR</option>
          <option value="USDT">USDT</option>
          <option value="QQ">QQCoins</option>
        </select>
        <label>Amount</label>
        <input type="number" id="exchangeAmt" placeholder="Enter amount" min="1">
        <div style="margin-top:10px;"><button onclick="submitWalletExchange()" class="primary">Swap</button></div>
      </div>

      <!-- TRANSFER -->
      <div id="transferForm" class="form-box hidden">
        <h3>Transfer Assets</h3>
        <label>Recipient QQ ID</label>
        <input type="text" id="transferID" placeholder="e.g., Agent-1122QQ">
        <label>Mode</label>
        <select id="transferMode">
          <option value="RS">‚Çπ INR</option>
          <option value="USDT">USDT</option>
          <option value="QQ">QQCoins</option>
        </select>
        <label>Amount</label>
        <input type="number" id="transferAmt" placeholder="Enter amount" min="1">
        <div style="margin-top:10px;"><button onclick="submitWalletTransfer()" class="primary">Submit Transfer</button></div>
      </div>

    </div>

<!-- HISTORY -->
<div class="wallet-history">
  <div class="history-head">Transaction History</div>
  <div class="history-table-wrapper">
    <table class="wallet-bal-table">
      <thead>
        <tr>
          <th>Type</th>
          <th>Amount</th>
          <th>Method</th>
          <th>Status</th>
          <th>Date</th>
        </tr>
      </thead>
      <tbody id="transaction-history">
        @foreach($transactions as $txn)
          <tr>
            <td>{{ ucfirst($txn->type) }}</td>
            <td>{{ $txn->amount }}</td>
            <td>{{ strtoupper($txn->method ?? '-') }}</td>
            <td>{{ ucfirst($txn->status) }}</td>
            <td>{{ $txn->created_at->format('d M Y H:i') }}</td>
          </tr>
        @endforeach
      </tbody>
    </table>
  </div>
</div>

<style>
.modal{display:none;position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.88);z-index:9999;overflow:auto;}
.wallet-neon{max-width:880px;margin:3% auto;padding:25px;border-radius:20px;background:radial-gradient(circle at top,#0c0c0c,#000);border:1px solid rgba(255,0,255,0.08);box-shadow:0 0 50px rgba(0,255,128,0.05);}
.wm-title{text-align:center;font-size:26px;color:#90ffb7;font-weight:900;letter-spacing:1px;text-shadow:0 0 15px #00ff99;}
.wm-sub{text-align:center;color:#bbb;margin-top:4px;font-size:13px;}
.wallet-bal-table{width:100%;margin-top:10px;text-align:center;border-collapse:collapse;}
.wallet-bal-table th{color:#8effa3;padding:10px;font-size:13px;border-bottom:1px solid rgba(255,255,255,0.05);}
.wallet-bal-table td{color:#fff;padding:10px;font-weight:600;border-bottom:1px solid rgba(255,255,255,0.03);}
.wallet-actions{display:grid;grid-template-columns:repeat(2,1fr);gap:12px;margin:20px 0;}
.wallet-act-card{padding:18px;text-align:center;background:linear-gradient(135deg,#111,#0b0b0b);border-radius:14px;border:1px solid rgba(0,255,128,0.1);box-shadow:0 0 20px rgba(0,255,128,0.05);cursor:pointer;color:#fff;font-weight:700;}
.wallet-act-card:hover{transform:scale(1.04);transition:0.2s;background:linear-gradient(135deg,#00ff88,#0099ff);}
.form-box{padding:16px;margin-top:10px;border-radius:14px;background:linear-gradient(180deg,#111,#080808);border:1px solid rgba(255,255,255,0.05);}
.form-box h3{color:#90ffb7;text-shadow:0 0 10px rgba(0,255,128,0.2);}
.form-box input,.form-box select{width:100%;padding:12px;margin:6px 0;border-radius:10px;border:none;background:#161616;color:#fff;font-size:14px;outline:none;}
.form-box input:focus,.form-box select:focus{box-shadow:0 0 8px #00ff99;}
.method-tiles{display:flex;gap:8px;margin:10px 0;}
.method-tiles button{flex:1;border:none;padding:12px;border-radius:10px;background:linear-gradient(90deg,#ff00ff88,#00ff99aa);color:#000;font-weight:800;cursor:pointer;}
.primary{background:linear-gradient(90deg,#00ffa1,#00d1ff);border:none;border-radius:10px;padding:10px 16px;font-weight:800;color:#000;cursor:pointer;}
.warn{background:linear-gradient(90deg,#ff9a7a,#ff3b7a);color:#000;}
.wallet-history{margin-top:18px;background:linear-gradient(180deg,#0a0a0a,#050505);padding:14px;border-radius:12px;}
.history-head{color:#90ffb7;font-weight:700;margin-bottom:8px;}
.history-item{color:#ccc;padding:8px;border-bottom:1px solid rgba(255,255,255,0.05);}
.hidden{display:none;}
</style>

<script>
function qqOpenForm(id){
  const forms=document.querySelectorAll('#walletForms .form-box');
  forms.forEach(f=>f.classList.add('hidden'));
  const el=document.getElementById(id);
  if(el)el.classList.remove('hidden');
}

function qqDepositMethod(method){
  let html='';
  if(method==='upi'){
    html='<div><b>UPI ID:</b> <span id="upiId">admin@upi</span> <button onclick="copyText(\'upiId\')">Copy</button><br><img src="/images/sample_upi_qr.png" width="120" alt="UPI QR"><br><small>Save this QR for payment</small></div>';
  }else if(method==='bank'){
    html='<div><b>Bank Account:</b><br>Account No: 1234567890<br>IFSC: SBIN0000111<br>Name: QQPAY ADMIN</div>';
  }else if(method==='usdt'){
    html='<div><b>USDT Address (TRC20):</b> <span id="usdtAddr">TXs2Adf11xPQz99kZ</span> <button onclick="copyText(\'usdtAddr\')">Copy</button><br><img src="/images/sample_usdt_qr.png" width="120" alt="USDT QR"><br><small>Save this QR for transfer</small></div>';
  }
  document.getElementById('depositDetails').innerHTML=html;
}

function qqWithdrawMethod(method){
  let html='';
  if(method==='upi'){
    html='<label>Your UPI ID</label><input type="text" placeholder="Enter your upi@bank">';
  }else if(method==='bank'){
    html='<label>Bank Account</label><input type="text" placeholder="Account No"><input type="text" placeholder="IFSC Code">';
  }else if(method==='usdt'){
    html='<label>Your USDT Address (TRC20)</label><input type="text" placeholder="Enter your wallet address">';
  }
  document.getElementById('withdrawDetails').innerHTML=html;
}

function copyText(id){
  const text=document.getElementById(id).innerText;
  navigator.clipboard.writeText(text);
  alert('Copied: '+text);
}

document.addEventListener("DOMContentLoaded",()=>{
  let wallet={balance_rs:5000,balance_usdt:0,balance_qq:0};
  document.getElementById("wBalRS").innerText="‚Çπ"+wallet.balance_rs.toFixed(2);
  document.getElementById("wBalUSDT").innerText=wallet.balance_usdt.toFixed(4)+" ‚ÇÆ";
  document.getElementById("wBalQQ").innerText=wallet.balance_qq.toFixed(4)+" QQ";
});
// ‚öôÔ∏è Wallet Action Submitters ‚Äî AJAX Connect

async function submitWalletDeposit() {
  const amt = document.getElementById('depositAmt').value;
  const method = document.querySelector('#depositDetails').innerText.includes('UPI')
    ? 'upi'
    : document.querySelector('#depositDetails').innerText.includes('Bank')
    ? 'bank'
    : 'usdt';
  if (!amt || amt <= 0) return alert('Enter valid amount');

  const res = await fetch('/wallet/deposit', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json', 'X-CSRF-TOKEN': '{{ csrf_token() }}' },
    body: JSON.stringify({ amount: amt, method })
  });
  const data = await res.json();
  alert(data.msg);
  loadWalletData();
}

async function submitWalletWithdraw() {
  const amt = document.getElementById('withdrawAmt').value;
  const method = document.querySelector('#withdrawDetails').innerText.includes('UPI')
    ? 'upi'
    : document.querySelector('#withdrawDetails').innerText.includes('Bank')
    ? 'bank'
    : 'usdt';
  if (!amt || amt <= 0) return alert('Enter valid amount');

  const res = await fetch('/wallet/withdraw', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json', 'X-CSRF-TOKEN': '{{ csrf_token() }}' },
    body: JSON.stringify({ amount: amt, method })
  });
  const data = await res.json();
  alert(data.msg);
  loadWalletData();
}

async function submitWalletExchange() {
  const amt = document.getElementById('exchangeAmt').value;
  const from = document.getElementById('exchangeFrom').value;
  const to = document.getElementById('exchangeTo').value;
  if (!amt || amt <= 0) return alert('Enter valid amount');

  const res = await fetch('/wallet/exchange', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json', 'X-CSRF-TOKEN': '{{ csrf_token() }}' },
    body: JSON.stringify({ amount: amt, from, to })
  });
  const data = await res.json();
  alert(data.msg);
  loadWalletData();
}

async function submitWalletTransfer() {
  const amt = document.getElementById('transferAmt').value;
  const recipient = document.getElementById('transferID').value;
  const mode = document.getElementById('transferMode').value;
  if (!amt || !recipient) return alert('Fill all fields');

  const res = await fetch('/wallet/transfer', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json', 'X-CSRF-TOKEN': '{{ csrf_token() }}' },
    body: JSON.stringify({ amount: amt, recipient, mode })
  });
  const data = await res.json();
  alert(data.msg);
  loadWalletData();
}

async function loadWalletData() {
  const res = await fetch('/wallet');
  const data = await res.json();
  document.getElementById('wBalRS').innerText = '‚Çπ' + data.wallet.balance_rs.toFixed(2);
  document.getElementById('wBalUSDT').innerText = data.wallet.balance_usdt.toFixed(4) + ' ‚ÇÆ';
  document.getElementById('wBalQQ').innerText = data.wallet.balance_qq.toFixed(4) + ' QQ';

  const list = document.getElementById('walletActivityList');
  list.innerHTML = '';
  data.transactions.forEach(tx => {
    list.innerHTML += `<div class="history-item">#${tx.id} ‚Äî ${tx.type.toUpperCase()} ‚Çπ${tx.amount} (${tx.method})<br><small>${tx.details}</small></div>`;
  });
}
</script>
EOF
